version: "3.8"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.8
    container_name: kafka
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - linkedin-network
    environment:
      #Kraft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      #Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafbat-ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    container_name: kafbat-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    networks:
      - linkedin-network
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_KSQLDBSERVER=http://ksqldb0:8088

  notification-db:
    image: postgres
    container_name: notification-db
    networks:
      - linkedin-network
    volumes:
      - notification-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=microserviceNotificationDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Postgres@123

  post-db:
    image: postgres
    container_name: post-db
    networks:
      - linkedin-network
    volumes:
      - post-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=microservicePostDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Postgres@123

  user-db:
    image: postgres
    container_name: user-db
    networks:
      - linkedin-network
    volumes:
      - user-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=microserviceUserDB
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Postgres@123

  connection-db:
    image: neo4j
    container_name: connection-db
    environment:
      - NEO4J_AUTH=neo4j/password123
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - connection-db-data:/data
    networks:
      - linkedin-network

  discovery-server:
    image: lokesh2yss/linkedin-app-discovery-server:v1
    container_name: discovery-server
    networks:
      - linkedin-network
    ports:
      - "8761:8761"

  post-service:
    image: lokesh2yss/linkedin-app-post-service:v1
    container_name: post-service
    networks:
      - linkedin-network
    depends_on:
      - kafka
      - discovery-server
      - post-db

  user-service:
    image: lokesh2yss/linkedin-app-user-service:v1
    container_name: user-service
    networks:
      - linkedin-network
    depends_on:
      - kafka
      - discovery-server
      - user-db

  notification-service:
    image: lokesh2yss/linkedin-app-notification-service:v1
    container_name: notification-service
    networks:
      - linkedin-network
    depends_on:
      - kafka
      - discovery-server
      - notification-db


  connection-service:
    image: lokesh2yss/linkedin-app-connection-service:v1
    container_name: connection-service
    networks:
      - linkedin-network
    depends_on:
      - kafka
      - discovery-server
      - connection-db

  api-gateway:
    image: lokesh2yss/linkedin-app-api-gateway:v1
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - linkedin-network
    depends_on:
      - kafka
      - discovery-server


networks:
  linkedin-network:

volumes:
  kafka_data:
  notification-db-data:
  connection-db-data:
  post-db-data:
  user-db-data: